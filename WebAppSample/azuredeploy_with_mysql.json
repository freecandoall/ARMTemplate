{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Name": {
      "type": "String",
      "metadata": {
        "description": "앱 서비스명을 입력하세요"
      }
    },
    "Os": {
      "type": "String",
      "defaultValue": "W",
      "allowedValues": [
        "W",
        "L"
      ],
      "metadata": {
        "description": "Windows:W, Linux:L"
      }
    },
    "Sku": {
      "type": "String",
      "defaultValue": "S1",
      "metadata": {
        "description": "App Service plan - Sku(S1,S2...P2v2,P3v2)"
      }
    },
    "NodeCount": {
      "type": "Int",
      "defaultValue": 1,
      "metadata": {
        "description": "노드 수량을 입력하세요"
      }
    },
    "MySQL_Name": {
      "defaultValue": "mysqlserver",
      "type": "String"
    },
    "mysqlServerAdminLogin": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Database administrator login name"
      }
    },
    "mysqlServerAdminLoginPassword": {
      "type": "securestring",
      "minLength": 8,
      "maxLength": 128,
      "metadata": {
        "description": "Database administrator password"
      }
    },
    "databaseSkucapacity": {
      "type": "int",
      "defaultValue": 2,
      "allowedValues": [
        2,
        4,
        8,
        16,
        32
      ],
      "metadata": {
        "description": "Azure database for PostgreSQL compute capacity in vCores (2,4,8,16,32)"
      }
    },
    "databaseSkuName": {
      "type": "string",
      "defaultValue": "GP_Gen5_2",
      "allowedValues": [
        "GP_Gen5_2",
        "GP_Gen5_4",
        "GP_Gen5_8",
        "GP_Gen5_16",
        "GP_Gen5_32",
        "MO_Gen5_2",
        "MO_Gen5_4",
        "MO_Gen5_8",
        "MO_Gen5_16",
        "MO_Gen5_32"
      ],
      "metadata": {
        "description": "Azure database for PostgreSQL sku name "
      }
    },
    "databaseSkuSizeMB": {
      "type": "int",
      "allowedValues": [
        102400,
        51200
      ],
      "defaultValue": 51200,
      "metadata": {
        "description": "Azure database for PostgreSQL Sku Size "
      }
    },
    "databaseSkuTier": {
      "type": "string",
      "defaultValue": "GeneralPurpose",
      "allowedValues": [
        "GeneralPurpose",
        "MemoryOptimized"
      ],
      "metadata": {
        "description": "Azure database for PostgreSQL pricing tier"
      }
    },
    "mysqlVersion": {
      "type": "string",
      "allowedValues": [
        "5.6",
        "5.7",
        "8.0"
      ],
      "defaultValue": "5.6",
      "metadata": {
        "description": "MySQL version"
      }
    },
    "databaseSkuFamily": {
      "type": "string",
      "defaultValue": "Gen5",
      "metadata": {
        "description": "Azure database for PostgreSQL sku family"
      }
    }
  },
  "variables": {
    "VnetName": "[concat(parameters('Name'),'-vnet')]",
    "NsgWebApp": "[concat('nsg-', parameters('Name'),'-webapp')]",
    "NsgDatabase": "[concat('nsg-', parameters('Name'),'-database')]",
    "PlanName": "[concat(parameters('Name'),'-plan')]",
    "ApplicationInsightsName": "[concat(parameters('Name'),'-appin')]",
    "storageAccountName": "[concat(replace(parameters('Name'),'-',''),'storage')]",
    "VnetConnectName": "[concat(guid(subscription().subscriptionId), '_webapp')]",
    "IsLinux": "[if(equals(parameters('Os'),'L'),'true','false')]",
    "sql-serverName": "[concat('sql-server', uniqueString(resourceGroup().id))]",
    "ApplicationInsightSmartDetectionName": "[concat(variables('ApplicationInsightsName'), uniqueString(resourceGroup().id), '-detect')]",
    "ApplicationInsightFailureAnomaliesName": "[concat(variables('ApplicationInsightsName'), uniqueString(resourceGroup().id), '-failure')]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-08-01",
      "name": "[variables('NsgWebApp')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [

        ]
      }
    },
    {
      "type": "microsoft.insights/actionGroups",
      "apiVersion": "2019-03-01",
      "name": "[variables('ApplicationInsightSmartDetectionName')]",
      "location": "Global",
      "properties": {
        "groupShortName": "SmartDetect",
        "enabled": true,
        "emailReceivers": [

        ],
        "smsReceivers": [

        ],
        "webhookReceivers": [

        ],
        "itsmReceivers": [

        ],
        "azureAppPushReceivers": [

        ],
        "automationRunbookReceivers": [

        ],
        "voiceReceivers": [

        ],
        "logicAppReceivers": [

        ],
        "azureFunctionReceivers": [

        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-08-01",
      "name": "[variables('NsgDatabase')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [

        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-08-01",
      "name": "[variables('VnetName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NsgWebApp'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NsgDatabase'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "webapp",
            "properties": {
              "addressPrefix": "10.0.0.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NsgWebApp'))]"
              },
              "serviceEndpoints": [

              ],
              "delegations": [
                {
                  "name": "delegation",
                  "properties": {
                    "serviceName": "Microsoft.Web/serverfarms"
                  }
                }
              ],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "database",
            "properties": {
              "addressPrefix": "10.0.1.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NsgDatabase'))]"
              },
              "serviceEndpoints": [
                {
                  "service": "Microsoft.Sql",
                  "locations": [
                    "koreacentral"
                  ]
                }
              ],
              "delegations": [

              ],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ],
        "virtualNetworkPeerings": [

        ],
        "enableDdosProtection": false,
        "enableVmProtection": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2019-08-01",
      "name": "[concat(variables('VnetName'), '/webapp')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('VnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NsgWebApp'))]"
      ],
      "properties": {
        "addressPrefix": "10.0.0.0/24",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NsgWebApp'))]"
        },
        "serviceEndpoints": [

        ],
        "delegations": [
          {
            "name": "delegation",
            "properties": {
              "serviceName": "Microsoft.Web/serverfarms"
            }
          }
        ],
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2019-08-01",
      "name": "[concat(variables('VnetName'), '/database')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('VnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NsgDatabase'))]"
      ],
      "properties": {
        "addressPrefix": "10.0.1.0/24",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NsgDatabase'))]"
        },
        "serviceEndpoints": [
          {
            "service": "Microsoft.Sql",
            "locations": [
              "koreacentral"
            ]
          }
        ],
        "delegations": [

        ],
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2015-05-01",
      "name": "[variables('ApplicationInsightsName')]",
      "location": "[resourceGroup().location]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "IbizaWebAppExtensionCreate"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2018-02-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {

      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2016-09-01",
      "name": "[variables('PlanName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('Sku')]",
        "capacity": "[parameters('NodeCount')]"
      },
      "kind": "app",
      "properties": {
        "reserved": "[variables('IsLinux')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2016-08-01",
      "name": "[parameters('Name')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('PlanName'))]"
      ],
      "kind": "app",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('PlanName'))]"
      },
      "resources": [
        {
          "type": "config",
          "apiVersion": "2018-02-01",
          "name": "virtualNetwork",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('Name'))]"
          ],
          "properties": {
            "subnetResourceId": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('VnetName')),'/subnets/webapp')]",
            "swiftSupported": true
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2016-08-01",
      "name": "[concat(parameters('Name'), '/web')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('Name'))]"
      ],
      "properties": {
        "vnetName": "[variables('VnetConnectName')]"
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2016-08-01",
      "name": "[concat(parameters('Name'), '/', parameters('Name'), '.azurewebsites.net')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('Name'))]"
      ],
      "properties": {
        "siteName": "[parameters('Name')]",
        "hostNameType": "Verified"
      }
    },
    {
      "type": "Microsoft.DBforMySQL/servers",
      "apiVersion": "2017-12-01-preview",
      "name": "[parameters('MySQL_Name')]",
      "location": "koreacentral",
      "sku": {
        "name": "[parameters('databaseSkuName')]",
        "tier": "[parameters('databaseSkuTier')]",
        "capacity": "[parameters('databaseSkucapacity')]",
        "size": "[parameters('databaseSkuSizeMB')]",
        "family": "[parameters('databaseSkuFamily')]"
      },
      "properties": {
        "storageProfile": {
          "storageMB": 5120,
          "backupRetentionDays": 7,
          "geoRedundantBackup": "Disabled",
          "storageAutoGrow": "Enabled"
        },
        "version": "[parameters('mysqlVersion')]",
        "sslEnforcement": "Enabled",
        "administratorLogin": "[parameters('mysqlServerAdminLogin')]",
        "administratorLoginPassword": "[parameters('mysqlServerAdminLoginPassword')]"
      }
    },
    {
      "type": "Microsoft.DBforMySQL/servers/virtualNetworkRules",
      "apiVersion": "2017-12-01-preview",
      "name": "[concat(parameters('MySQL_Name'), '/connSunbetDatabase')]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforMySQL/servers', parameters('MySQL_Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VnetName'), 'database')]"
      ],
      "properties": {
        "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VnetName'), 'database')]",
        "ignoreMissingVnetServiceEndpoint": false
      }
    }
  ]
}