{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Name": {
      "type": "String"
    },
    "Location": {
      "type": "String"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "secureString"
    }
  },
  "variables": {
    "SubscriptionID": "[subscription().subscriptionID]",
    "ResourceGroupName": "[concat('rg-',parameters('Name'))]",
    "ResourceIdPrefix": "[concat('/subscriptions/', variables('SubscriptionID'), '/resourceGroups/', variables('resourceGroupName'), '/providers/')]",
    "AppServicePlanSku": "S1",
    "AppServicePlanNodeCount": "1",
    "PlanName": "[concat(parameters('Name'),'-plan')]",
    "FuncName": "[concat(parameters('Name'),'func')]",
    "storageAccountName": "[concat(replace(parameters('Name'),'-',''),'storage')]",
    "ApplicationInsightsName": "[concat(parameters('Name'),'-appin')]",
    "VNetName": "[concat('vnet-', parameters('Name'))]",
    "NsgWebApp": "[concat('nsg-', parameters('Name'),'-webapp')]",
    "NsgDatabase": "[concat('nsg-', parameters('Name'), '-database')]",
    "AVSetDatabase": "[concat('avset-', parameters('Name'), '-database')]",
    "VmName": "[concat('vm-',parameters('Name'))]",
    "NicName": "[concat(variables('vmName'),'-nic')]",
    "PipName": "[concat(variables('vmName'),'-pip')]",
    "OsDisk": "[concat(variables('vmName'),'-os-disk')]",
    "DataDisk": "[concat(variables('vmName'),'-data-disk-01')]",
    "IsLinux": "false"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2018-05-01",
      "name": "[variables('resourceGroupName')]",
      "location": "[parameters('Location')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-05-01",
      "name": "[concat(parameters('Name'),'Deployment')]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2016-09-01",
              "name": "[variables('PlanName')]",
              "location": "[parameters('Location')]",
              "sku": {
                "name": "[variables('AppServicePlanSku')]",
                "capacity": "[variables('AppServicePlanNodeCount')]"
              },
              "kind": "app",
              "properties": {
                "reserved": "[variables('IsLinux')]"
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2016-08-01",
              "name": "[parameters('Name')]",
              "location": "[parameters('Location')]",
              "dependsOn": [
                "[concat(variables('ResourceIdPrefix'),'Microsoft.Web/serverfarms/', variables('PlanName'))]"
              ],
              "kind": "app",
              "properties": {
                "serverFarmId": "[concat(variables('ResourceIdPrefix'),'Microsoft.Web/serverfarms/', variables('PlanName'))]"
              },
              "resources": []
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2016-08-01",
              "name": "[variables('FuncName')]",
              "location": "[parameters('Location')]",
              "dependsOn": [
                "[concat(variables('ResourceIdPrefix'),'Microsoft.Web/serverfarms/', variables('PlanName'))]"
              ],
              "kind": "functionapp",
              "properties": {
                "serverFarmId": "[concat(variables('ResourceIdPrefix'),'Microsoft.Web/serverfarms/', variables('PlanName'))]"
              },
              "resources": []
            },
            {
              "type": "Microsoft.Web/sites/hostNameBindings",
              "apiVersion": "2016-08-01",
              "name": "[concat(parameters('Name'), '/', parameters('Name'), '.azurewebsites.net')]",
              "location": "[parameters('Location')]",
              "dependsOn": [
                "[concat(variables('ResourceIdPrefix'),'Microsoft.Web/sites/', parameters('Name'))]"
              ],
              "properties": {
                "siteName": "[parameters('Name')]",
                "hostNameType": "Verified"
              }
            },
            {
              "type": "Microsoft.Web/sites/hostNameBindings",
              "apiVersion": "2016-08-01",
              "name": "[concat(variables('FuncName'), '/', variables('FuncName'), '.azurewebsites.net')]",
              "location": "[parameters('Location')]",
              "dependsOn": [
                "[concat(variables('ResourceIdPrefix'),'Microsoft.Web/sites/', variables('FuncName'))]"
              ],
              "properties": {
                "siteName": "[variables('FuncName')]",
                "hostNameType": "Verified"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "name": "[variables('storageAccountName')]",
              "apiVersion": "2018-02-01",
              "location": "[parameters('Location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "Storage",
              "properties": {}
            },
            {
              "type": "microsoft.insights/components",
              "apiVersion": "2015-05-01",
              "name": "[variables('ApplicationInsightsName')]",
              "location": "[parameters('Location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "Request_Source": "IbizaWebAppExtensionCreate"
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2019-08-01",
              "name": "[variables('NsgWebApp')]",
              "location": "[parameters('Location')]",
              "properties": {
                "securityRules": []
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2019-08-01",
              "name": "[variables('NsgDatabase')]",
              "location": "[parameters('Location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "Allow-Rdp",
                    "properties": {
                      "protocol": "TCP",
                      "sourcePortRange": "*",
                      "destinationPortRange": "3389",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  },
                  {
                    "name": "Allow-Sql",
                    "properties": {
                      "protocol": "TCP",
                      "sourcePortRange": "*",
                      "destinationPortRange": "1433",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 200,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2019-08-01",
              "name": "[variables('VnetName')]",
              "location": "[parameters('Location')]",
              "dependsOn": [
                "[concat(variables('ResourceIdPrefix'),'Microsoft.Network/networkSecurityGroups/', variables('NsgWebApp'))]",
                "[concat(variables('ResourceIdPrefix'),'Microsoft.Network/networkSecurityGroups/', variables('NsgDatabase'))]"
              ],
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "10.0.0.0/16"
                  ]
                },
                "subnets": [
                  {
                    "name": "webapp",
                    "properties": {
                      "addressPrefix": "10.0.0.0/24",
                      "networkSecurityGroup": {
                        "id": "[concat(variables('ResourceIdPrefix'),'Microsoft.Network/networkSecurityGroups/', variables('NsgWebApp'))]"
                      },
                      "serviceEndpoints": [],
                      "delegations": [
                        {
                          "name": "delegation",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                          }
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "database",
                    "properties": {
                      "addressPrefix": "10.0.1.0/24",
                      "networkSecurityGroup": {
                        "id": "[concat(variables('ResourceIdPrefix'),'Microsoft.Network/networkSecurityGroups/', variables('NsgDatabase'))]"
                      },
                      "serviceEndpoints": [],
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2019-08-01",
              "name": "[concat(variables('VnetName'), '/webapp')]",
              "dependsOn": [
                "[concat(variables('ResourceIdPrefix'),'Microsoft.Network/virtualNetworks/', variables('VnetName'))]",
                "[concat(variables('ResourceIdPrefix'),'Microsoft.Network/networkSecurityGroups/', variables('NsgWebApp'))]"
              ],
              "properties": {
                "addressPrefix": "10.0.0.0/24",
                "networkSecurityGroup": {
                  "id": "[concat(variables('ResourceIdPrefix'),'Microsoft.Network/networkSecurityGroups/', variables('NsgWebApp'))]"
                },
                "serviceEndpoints": [],
                "delegations": [
                  {
                    "name": "delegation",
                    "properties": {
                      "serviceName": "Microsoft.Web/serverfarms"
                    }
                  }
                ],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2019-08-01",
              "name": "[concat(variables('VnetName'), '/database')]",
              "dependsOn": [
                "[concat(variables('ResourceIdPrefix'),'Microsoft.Network/virtualNetworks/', variables('VnetName'))]",
                "[concat(variables('ResourceIdPrefix'),'Microsoft.Network/networkSecurityGroups/', variables('NsgDatabase'))]"
              ],
              "properties": {
                "addressPrefix": "10.0.1.0/24",
                "networkSecurityGroup": {
                  "id": "[concat(variables('ResourceIdPrefix'),'Microsoft.Network/networkSecurityGroups/', variables('NsgDatabase'))]"
                },
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
              }
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2019-09-01",
              "name": "[variables('PipName')]",
              "location": "[parameters('Location')]",
              "sku": {
                "name": "Basic"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              }
            },
            {
              "type": "Microsoft.Compute/availabilitySets",
              "apiVersion": "2019-03-01",
              "name": "[variables('AVSetDatabase')]",
              "location": "[parameters('Location')]",
              "dependsOn": [],
              "sku": {
                "name": "Aligned"
              },
              "properties": {
                "platformUpdateDomainCount": 5,
                "platformFaultDomainCount": 2,
                "virtualMachines": [
                  {
                    "id": "[concat(variables('ResourceIdPrefix'),'Microsoft.Compute/virtualMachines/', variables('VmName'))]"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2019-09-01",
              "name": "[variables('NicName')]",
              "location": "[parameters('Location')]",
              "dependsOn": [
                "[concat(variables('ResourceIdPrefix'),'Microsoft.Network/publicIPAddresses/', variables('PipName'))]",
                "[concat(variables('ResourceIdPrefix'),'Microsoft.Network/virtualNetworks/', variables('VNetName'), '/subnets/database')]"
              ],
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAddress": "10.0.1.4",
                      "privateIPAllocationMethod": "static",
                      "publicIPAddress": {
                        "id": "[concat(variables('ResourceIdPrefix'),'Microsoft.Network/publicIPAddresses/', variables('PipName'))]"
                      },
                      "subnet": {
                        "id": "[concat(variables('ResourceIdPrefix'),'Microsoft.Network/virtualNetworks/', variables('VNetName'), '/subnets/database')]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "IPv4"
                    }
                  }
                ],
                "dnsSettings": {
                  "dnsServers": []
                },
                "enableAcceleratedNetworking": true,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                  "id": "[concat(variables('ResourceIdPrefix'),'Microsoft.Network/networkSecurityGroups/', variables('NsgDatabase'))]"
                }
              }
            },            
            {
              "type": "Microsoft.SqlVirtualMachine/sqlVirtualMachines",
              "apiVersion": "2017-03-01-preview",
              "name": "[variables('VmName')]",
              "location": "[parameters('Location')]",
              "dependsOn": [
                "[concat(variables('ResourceIdPrefix'),'Microsoft.Compute/virtualMachines/', variables('VmName'))]"
              ],
              "properties": {
                "virtualMachineResourceId": "[concat(variables('ResourceIdPrefix'),'Microsoft.Compute/virtualMachines/', variables('VmName'))]",
                "sqlImageOffer": "SQL2016-WS2016",
                "sqlServerLicenseType": "PAYG",
                "sqlManagement": "Full",
                "sqlImageSku": "Standard"
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2019-03-01",
              "name": "[variables('VmName')]",
              "location": "[parameters('Location')]",
              "dependsOn": [
                "[concat(variables('ResourceIdPrefix'),'Microsoft.Compute/availabilitySets/', variables('AVSetDatabase'))]",
                "[concat(variables('ResourceIdPrefix'),'Microsoft.Network/networkInterfaces/', variables('NicName'))]"
              ],
              "properties": {
                "availabilitySet": {
                  "id": "[concat(variables('ResourceIdPrefix'),'Microsoft.Compute/availabilitySets/', variables('AVSetDatabase'))]"
                },
                "hardwareProfile": {
                  "vmSize": "Standard_E4_v3"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftSQLServer",
                    "offer": "SQL2016SP1-WS2016",
                    "sku": "Standard",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "[variables('OsDisk')]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "StandardSSD_LRS"
                    },
                    "diskSizeGB": 127
                  },
                  "dataDisks": [
                    {
                      "lun": 0,
                      "name": "[variables('DataDisk')]",
                      "createOption": "Empty",
                      "caching": "ReadOnly",
                      "writeAcceleratorEnabled": false,
                      "managedDisk": {
                        "storageAccountType": "StandardSSD_LRS"
                      },
                      "diskSizeGB": 1023,
                      "toBeDetached": false
                    }
                  ]
                },
                "osProfile": {
                  "computerName": "[variables('VmName')]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[concat(variables('ResourceIdPrefix'),'Microsoft.Network/networkInterfaces/', variables('NicName'))]"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2018-02-01",
              "name": "[concat(parameters('Name'), '/virtualNetwork')]",
              "location": "[parameters('Location')]",
              "dependsOn": [
                "[concat(variables('ResourceIdPrefix'),'Microsoft.Web/sites/', parameters('Name'))]"
              ],
              "properties": {
                "subnetResourceId": "[concat(variables('ResourceIdPrefix'),'Microsoft.Network/virtualNetworks/', variables('VNetName'),'/subnets/webapp')]",
                "swiftSupported": true
              }
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2018-02-01",
              "name": "[concat(variables('FuncName'), '/web')]",
              "location": "[parameters('Location')]",
              "dependsOn": [
                "[concat(variables('ResourceIdPrefix'),'Microsoft.Web/sites/', variables('FuncName'))]"
              ],
              "properties": {
                "subnetResourceId": "[concat(variables('ResourceIdPrefix'),'Microsoft.Network/virtualNetworks/', variables('VNetName'),'/subnets/webapp')]",
                "swiftSupported": true
              }
            }
          ]
        }
      }
    }
  ]
}