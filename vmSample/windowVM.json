{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "secureString"
    }
  },
  "variables": {
    "VnetName": "[concat(parameters('vmName'),'-vnet')]",
    "NicName": "[concat(parameters('vmName'),'-nic')]",
    "NsgName": "[concat(parameters('vmName'),'-nsg')]",
    "OSDiskName": "[concat('osd-', uniqueString(resourceGroup().id))]",
    "DataDiskName": "[concat('dsk-', uniqueString(resourceGroup().id))]",
    "vmSize": "Standard_E4s_v3",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "publicIPAddressName": "myPublicIP",
    "publicIPAddressType": "Dynamic",
    "availabilitySetName": "[concat(parameters('vmName'),'-avset')]",
    "availabilitySetPlatformFaultDomainCount": 2,
    "availabilitySetPlatformUpdateDomainCount": 5,
    "vhdStorageAccountName": "[concat('vhdstorage', uniqueString(resourceGroup().id))]",
    "diagnosticsStorageAccountType": "Standard_LRS",
    "diagnosticsStorageAccountKind": "Storage",
    "diagnosticsStorageAccountName": "[variables('vhdStorageAccountName')]",
    "sqlVirtualMachineLocation": "[resourceGroup().location]",
    "sqlVirtualMachineName": "[concat(parameters('vmName'),'-sqlvm')]",
    "sqlConnectivityType": "Public",
    "sqlPortNumber": 1433,
    "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('NsgName'))]",
    "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', variables('VnetName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]"
  },
  "resources": [
    {
      "name": "[variables('NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-07-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('NsgName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('VnetName'))]",
        "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('publicIPAddressName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('nsgId')]"
        }
      }
    },
    {
      "name": "[variables('NsgName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-02-01",
      "location": "[resourceGroup().location]",
      "properties": {
      }
    },
    {
      "name": "[variables('VnetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-04-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [ "[variables('addressPrefix')]" ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('publicIPAddressName')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2019-02-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIpAllocationMethod": "[variables('publicIpAddressType')]"
      }
    },
    {
      "name": "[variables('sqlVirtualMachineName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-07-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('NicName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftSQLServer",
            "offer": "SQL2016SP1-WS2016",
            "sku": "Web",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(variables('sqlVirtualMachineName'), variables('OSDiskName'))]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            },
            "diskSizeGB": 127
          },
          "dataDisks": [
            {
              "lun": 0,
              "name": "[concat(variables('sqlVirtualMachineName'), variables('DataDiskName'))]",
              "createOption": "Empty",
              "caching": "ReadOnly",
              "writeAcceleratorEnabled": false,
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              },
              "diskSizeGB": 1023,
              "toBeDetached": false
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('NicName'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "enableAutomaticUpdates": true,
            "provisionVmAgent": true
          }
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('https://', variables('diagnosticsStorageAccountName'), '.blob.core.windows.net/')]"
          }
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        }
      }
    },
    {
      "name": "[variables('diagnosticsStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "location": "[resourceGroup().location]",
      "properties": {},
      "kind": "[variables('diagnosticsStorageAccountKind')]",
      "sku": {
        "name": "[variables('diagnosticsStorageAccountType')]"
      }
    },
    {
      "name": "[variables('availabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2019-07-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": "[variables('availabilitySetPlatformFaultDomainCount')]",
        "platformUpdateDomainCount": "[variables('availabilitySetPlatformUpdateDomainCount')]"
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "type": "Microsoft.SqlVirtualMachine/sqlVirtualMachines",
      "apiVersion": "2017-03-01-preview",
      "name": "[variables('sqlVirtualMachineName')]",
      "location": "[variables('sqlVirtualMachineLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('sqlVirtualMachineName'))]"
      ],
      "properties": {
        "virtualMachineResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('sqlVirtualMachineName'))]",
        "sqlImageOffer": "SQL2016-WS2016",
        "sqlServerLicenseType": "PAYG",
        "sqlManagement": "Full",
        "ServerConfigurationsManagementSettings": {
          "SQLConnectivityUpdateSettings": {
            "ConnectivityType": "[variables('sqlConnectivityType')]",
            "Port": "[variables('sqlPortNumber')]",
            "SQLAuthUpdateUserName": "",
            "SQLAuthUpdatePassword": ""
          }
        }
      }
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    }
  }
}