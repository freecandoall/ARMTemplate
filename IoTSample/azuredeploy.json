{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "servers_sqliotserver_name": {
      "defaultValue": "sqliotserver",
      "type": "String"
    },
    "IotHubs_iot_hub_esp32_terry_name": {
      "defaultValue": "iot-hub-esp32-terry",
      "type": "String"
    },
    "storageAccounts_iotstorage77_name": {
      "defaultValue": "iotstorage77",
      "type": "String"
    },
    "streamingjobs_StreamA_name": {
      "defaultValue": "StreamA",
      "type": "String"
    },
    "databaseAccounts_cosmosiot001_name": {
      "defaultValue": "cosmosiot001",
      "type": "String"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Devices/IotHubs",
      "apiVersion": "2018-04-01",
      "name": "[parameters('IotHubs_iot_hub_esp32_terry_name')]",
      "location": "koreacentral",
      "sku": {
        "name": "S1",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "operationsMonitoringProperties": {
          "events": {
            "None": "None",
            "Connections": "None",
            "DeviceTelemetry": "None",
            "C2DCommands": "None",
            "DeviceIdentityOperations": "None",
            "FileUploadOperations": "None",
            "Routes": "None"
          }
        },
        "ipFilterRules": [],
        "eventHubEndpoints": {
          "events": {
            "retentionTimeInDays": 1,
            "partitionCount": 4,
            "partitionIds": [
              "0",
              "1",
              "2",
              "3"
            ],
            "path": "[parameters('IotHubs_iot_hub_esp32_terry_name')]",
            "endpoint": "sb://iothub-ns-iot-hub-es-2325870-9f89c73f03.servicebus.windows.net/"
          },
          "operationsMonitoringEvents": {
            "retentionTimeInDays": 1,
            "partitionCount": 4,
            "partitionIds": [
              "0",
              "1",
              "2",
              "3"
            ],
            "path": "[concat(parameters('IotHubs_iot_hub_esp32_terry_name'), '-operationmonitoring')]",
            "endpoint": "sb://iothub-ns-iot-hub-es-2325870-9f89c73f03.servicebus.windows.net/"
          }
        },
        "routing": {
          "endpoints": {
            "serviceBusQueues": [],
            "serviceBusTopics": [],
            "eventHubs": [],
            "storageContainers": []
          },
          "routes": [],
          "fallbackRoute": {
            "name": "$fallback",
            "source": "DeviceMessages",
            "condition": "true",
            "endpointNames": [
              "events"
            ],
            "isEnabled": true
          }
        },
        "storageEndpoints": {
          "$default": {
            "sasTtlAsIso8601": "PT1H",
            "connectionString": "",
            "containerName": ""
          }
        },
        "messagingEndpoints": {
          "fileNotifications": {
            "lockDurationAsIso8601": "PT1M",
            "ttlAsIso8601": "PT1H",
            "maxDeliveryCount": 10
          }
        },
        "enableFileUploadNotifications": false,
        "cloudToDevice": {
          "maxDeliveryCount": 10,
          "defaultTtlAsIso8601": "PT1H",
          "feedback": {
            "lockDurationAsIso8601": "PT1M",
            "ttlAsIso8601": "PT1H",
            "maxDeliveryCount": 10
          }
        },
        "features": "None"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2019-08-01",
      "name": "[parameters('databaseAccounts_cosmosiot001_name')]",
      "location": "Korea Central",
      "tags": {
        "defaultExperience": "Core (SQL)"
      },
      "kind": "GlobalDocumentDB",
      "properties": {
        "enableAutomaticFailover": false,
        "enableMultipleWriteLocations": false,
        "isVirtualNetworkFilterEnabled": false,
        "virtualNetworkRules": [],
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session",
          "maxIntervalInSeconds": 5,
          "maxStalenessPrefix": 100
        },
        "locations": [
          {
            "locationName": "Korea Central",
            "provisioningState": "Succeeded",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "capabilities": []
      }
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2015-05-01-preview",
      "name": "[parameters('servers_sqliotserver_name')]",
      "location": "koreacentral",
      "kind": "v12.0",
      "properties": {
        "administratorLogin": "sadmin",
        "version": "12.0"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-04-01",
      "name": "[parameters('storageAccounts_iotstorage77_name')]",
      "location": "koreacentral",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs",
      "apiVersion": "2016-03-01",
      "name": "[parameters('streamingjobs_StreamA_name')]",
      "location": "Korea Central",
      "properties": {
        "sku": {
          "name": "Standard"
        },
        "outputStartMode": "JobStartTime",
        "eventsOutOfOrderPolicy": "Adjust",
        "outputErrorPolicy": "Stop",
        "eventsOutOfOrderMaxDelayInSeconds": 0,
        "eventsLateArrivalMaxDelayInSeconds": 5,
        "dataLocale": "en-US",
        "compatibilityLevel": "1.1"
      }
    },
    {
      "type": "Microsoft.Sql/servers/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/CreateIndex')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/DbParameterization')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/DefragmentIndex')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/DropIndex')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/ForceLastGoodPlan')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/auditingPolicies",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/Default')]",
      "location": "Korea Central",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "auditingState": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/auditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "state": "Disabled",
        "retentionDays": 0,
        "auditActionsAndGroups": [],
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
        "isStorageSecondaryKeyInUse": false
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/IoTSQLDB')]",
      "location": "koreacentral",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "sku": {
        "name": "Basic",
        "tier": "Basic"
      },
      "kind": "v12.0,user",
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "maxSizeBytes": 2147483648,
        "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/auditingPolicies",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/master/Default')]",
      "location": "Korea Central",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "auditingState": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/auditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/master/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "state": "Disabled",
        "retentionDays": 0,
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
        "isStorageSecondaryKeyInUse": false
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/master/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "state": "Disabled",
        "retentionDays": 0,
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
        "isStorageSecondaryKeyInUse": false
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/master/Default')]",
      "location": "Korea Central",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "state": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
      "apiVersion": "2018-06-01-preview",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/master/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "state": "Disabled",
        "disabledAlerts": [
          ""
        ],
        "emailAddresses": [
          ""
        ],
        "emailAccountAdmins": false,
        "retentionDays": 0
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/master/current')]",
      "location": "Korea Central",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "status": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/master/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "recurringScans": {
          "isEnabled": false,
          "emailSubscriptionAdmins": true
        }
      }
    },
    {
      "type": "Microsoft.Sql/servers/encryptionProtector",
      "apiVersion": "2015-05-01-preview",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/current')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "kind": "servicemanaged",
      "properties": {
        "serverKeyName": "ServiceManaged",
        "serverKeyType": "ServiceManaged"
      }
    },
    {
      "type": "Microsoft.Sql/servers/extendedAuditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "state": "Disabled",
        "retentionDays": 0,
        "auditActionsAndGroups": [],
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
        "isStorageSecondaryKeyInUse": false
      }
    },
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2015-05-01-preview",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/AllowAllWindowsAzureIps')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      }
    },
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2015-05-01-preview",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/ClientIPAddress_2019-10-22_10-0-44')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "startIpAddress": "218.153.177.209",
        "endIpAddress": "218.153.177.209"
      }
    },
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2015-05-01-preview",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/ClientIPAddress_2019-10-23_16-45-9')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "startIpAddress": "223.62.169.234",
        "endIpAddress": "223.62.169.234"
      }
    },
    {
      "type": "Microsoft.Sql/servers/keys",
      "apiVersion": "2015-05-01-preview",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/ServiceManaged')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "kind": "servicemanaged",
      "properties": {
        "serverKeyType": "ServiceManaged"
      }
    },
    {
      "type": "Microsoft.Sql/servers/securityAlertPolicies",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "state": "Disabled",
        "disabledAlerts": [
          ""
        ],
        "emailAddresses": [
          ""
        ],
        "emailAccountAdmins": false,
        "retentionDays": 0
      }
    },
    {
      "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
      "apiVersion": "2018-06-01-preview",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "recurringScans": {
          "isEnabled": false,
          "emailSubscriptionAdmins": true
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-04-01",
      "name": "[concat(parameters('storageAccounts_iotstorage77_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_iotstorage77_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/inputs",
      "apiVersion": "2016-03-01",
      "name": "[concat(parameters('streamingjobs_StreamA_name'), '/IoTinputStream')]",
      "dependsOn": [
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamingjobs_StreamA_name'))]"
      ],
      "properties": {
        "type": "Stream",
        "datasource": {
          "type": "Microsoft.Devices/IotHubs",
          "properties": {
            "iotHubNamespace": "iot-hub-esp32-terry",
            "sharedAccessPolicyName": "iothubowner",
            "endpoint": "messages/events",
            "consumerGroupName": "$Default"
          }
        },
        "compression": {
          "type": "None"
        },
        "partitionKey": "",
        "serialization": {
          "type": "Json",
          "properties": {
            "encoding": "UTF8"
          }
        },
        "etag": "68afb417-ce51-4703-840c-21450f22dffa"
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
      "apiVersion": "2016-03-01",
      "name": "[concat(parameters('streamingjobs_StreamA_name'), '/BlobOutput')]",
      "dependsOn": [
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamingjobs_StreamA_name'))]"
      ],
      "properties": {
        "datasource": {
          "type": "Microsoft.Storage/Blob",
          "properties": {
            "blobPathPrefix": "",
            "storageAccounts": [
              {
                "accountName": "iotstorage77"
              }
            ],
            "container": "iotstorage",
            "pathPattern": "",
            "dateFormat": "yyyy/MM/dd",
            "timeFormat": "HH",
            "authenticationMode": "ConnectionString"
          }
        },
        "serialization": {
          "type": "Json",
          "properties": {
            "encoding": "UTF8",
            "format": "LineSeparated"
          }
        }
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
      "apiVersion": "2016-03-01",
      "name": "[concat(parameters('streamingjobs_StreamA_name'), '/CosmosOutput')]",
      "dependsOn": [
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamingjobs_StreamA_name'))]"
      ],
      "properties": {
        "datasource": {
          "type": "Microsoft.Storage/DocumentDB",
          "properties": {
            "accountId": "cosmosiot001",
            "accountKey": null,
            "database": "IoTCosmos",
            "collectionNamePattern": "IoTContainer"
          }
        }
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
      "apiVersion": "2016-03-01",
      "name": "[concat(parameters('streamingjobs_StreamA_name'), '/SQLDBOutput')]",
      "dependsOn": [
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamingjobs_StreamA_name'))]"
      ],
      "properties": {
        "datasource": {
          "type": "Microsoft.Sql/Server/Database",
          "properties": {
            "maxWriterCount": 1,
            "maxBatchCount": 10000,
            "table": "IOTDB",
            "server": "sqliotserver.database.windows.net",
            "database": "IoTSQLDB",
            "user": "sadmin"
          }
        }
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/IoTSQLDB/CreateIndex')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqliotserver_name'), 'IoTSQLDB')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/IoTSQLDB/DbParameterization')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqliotserver_name'), 'IoTSQLDB')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/IoTSQLDB/DefragmentIndex')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqliotserver_name'), 'IoTSQLDB')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/IoTSQLDB/DropIndex')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqliotserver_name'), 'IoTSQLDB')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/IoTSQLDB/ForceLastGoodPlan')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqliotserver_name'), 'IoTSQLDB')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/auditingPolicies",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/IoTSQLDB/Default')]",
      "location": "Korea Central",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqliotserver_name'), 'IoTSQLDB')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "auditingState": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/auditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/IoTSQLDB/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqliotserver_name'), 'IoTSQLDB')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "state": "Disabled",
        "retentionDays": 0,
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
        "isStorageSecondaryKeyInUse": false
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/IoTSQLDB/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqliotserver_name'), 'IoTSQLDB')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "state": "Disabled",
        "retentionDays": 0,
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
        "isStorageSecondaryKeyInUse": false
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/IoTSQLDB/Default')]",
      "location": "Korea Central",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqliotserver_name'), 'IoTSQLDB')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "state": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
      "apiVersion": "2018-06-01-preview",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/IoTSQLDB/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqliotserver_name'), 'IoTSQLDB')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "state": "Disabled",
        "disabledAlerts": [
          ""
        ],
        "emailAddresses": [
          ""
        ],
        "emailAccountAdmins": false,
        "retentionDays": 0
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/IoTSQLDB/current')]",
      "location": "Korea Central",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqliotserver_name'), 'IoTSQLDB')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "status": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('servers_sqliotserver_name'), '/IoTSQLDB/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqliotserver_name'), 'IoTSQLDB')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_sqliotserver_name'))]"
      ],
      "properties": {
        "recurringScans": {
          "isEnabled": false,
          "emailSubscriptionAdmins": true
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-04-01",
      "name": "[concat(parameters('storageAccounts_iotstorage77_name'), '/default/iotstorage')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_iotstorage77_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_iotstorage77_name'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    }
  ]
}