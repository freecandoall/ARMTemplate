{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "InputName": {
            "type": "String"
        },
        "sqlServerAdminLogin": {
            "defaultValue": "rapker",
            "type": "string",
            "minLength": 1
        },
        "sqlServerAdminLoginPassword": {
            "defaultValue": "zmffnzjtm12!@",
            "type": "securestring"
        }
    },
    "variables": {
        "iotHubApiVersion": "2018-04-01",
        "sqlServerName": "[concat('sql-', parameters('InputName'), uniqueString(resourceGroup().id))]",
        "databaseName": "[concat('sdb-', parameters('InputName'))]",
        "storageAccountName": "[concat('sa', parameters('InputName'), uniqueString(resourceGroup().id))]",
        "storageVersion": "2019-04-01",
        "storageId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "iotHubName": "[concat('iot-', parameters('InputName'), uniqueString(resourceGroup().id))]",
        "iotHubKeyName": "iothubowner",
        "iotHubKeyResource": "[resourceId('Microsoft.Devices/Iothubs/Iothubkeys', variables('iotHubName'), variables('iotHubKeyName'))]",
        "streamALName": "[concat('sal-', parameters('InputName'), uniqueString(resourceGroup().id))]",
        "cosmosName": "[concat('cdb-', parameters('InputName'), uniqueString(resourceGroup().id))]",
        "cosmosVersion": "2019-08-01",
        "cosmosId": "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Devices/IotHubs",
            "apiVersion": "[variables('iotHubApiVersion')]",
            "name": "[variables('iotHubName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {
                "operationsMonitoringProperties": {
                    "events": {
                        "None": "None",
                        "Connections": "None",
                        "DeviceTelemetry": "None",
                        "C2DCommands": "None",
                        "DeviceIdentityOperations": "None",
                        "FileUploadOperations": "None",
                        "Routes": "None"
                    }
                },
                "ipFilterRules": [],
                "routing": {
                    "endpoints": {
                        "serviceBusQueues": [],
                        "serviceBusTopics": [],
                        "eventHubs": [],
                        "storageContainers": []
                    },
                    "routes": [],
                    "fallbackRoute": {
                        "name": "$fallback",
                        "source": "DeviceMessages",
                        "condition": "true",
                        "endpointNames": [
                            "events"
                        ],
                        "isEnabled": true
                    }
                },
                "storageEndpoints": {
                    "$default": {
                        "sasTtlAsIso8601": "PT1H",
                        "connectionString": "",
                        "containerName": ""
                    }
                },
                "messagingEndpoints": {
                    "fileNotifications": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "enableFileUploadNotifications": false,
                "cloudToDevice": {
                    "maxDeliveryCount": 10,
                    "defaultTtlAsIso8601": "PT1H",
                    "feedback": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "features": "None"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "[variables('cosmosVersion')]",
            "name": "[variables('cosmosName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "defaultExperience": "Core (SQL)"
            },
            "kind": "GlobalDocumentDB",
            "properties": {
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "[resourceGroup().location]",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "capabilities": []
            }
        },
        {
            "name": "[variables('sqlServerName')]",
            "type": "Microsoft.Sql/servers",
            "location": "[resourceGroup().location]",
            "apiVersion": "2014-04-01-preview",
            "dependsOn": [],
            "tags": {
              "displayName": "[variables('sqlServerName')]"
            },
            "properties": {
              "administratorLogin": "[parameters('sqlServerAdminLogin')]",
              "administratorLoginPassword": "[parameters('sqlServerAdminLoginPassword')]",
              "version": "12.0"
            },
            "resources": [
              {
                "name": "AllowAllWindowsAzureIps",
                "type": "firewallrules",
                "location": "[resourceGroup().location]",
                "apiVersion": "2014-04-01-preview",
                "dependsOn": [
                  "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
                ],
                "properties": {
                  "startIpAddress": "0.0.0.0",
                  "endIpAddress": "0.0.0.0"
                }
              },
              {
                "name": "[variables('databaseName')]",
                "type": "databases",
                "location": "[resourceGroup().location]",
                "apiVersion": "2014-04-01-preview",
                "dependsOn": [
                  "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
                ],
                "tags": {
                  "displayName": "databaseName"
                },
                "properties": {
                  "collation": "SQL_Latin1_General_CP1_CI_AS",
                  "edition": "Standard",
                  "maxSizeBytes": "1073741824",
                  "requestedServiceObjectiveName": "S0"
                }
              }
            ]
          },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[variables('storageVersion')]",
            "name": "[variables('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "[variables('storageVersion')]",
            "name": "[concat(variables('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.StreamAnalytics/streamingjobs",
            "apiVersion": "2019-06-01",
            "name": "[variables('streamALName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Devices/IotHubs', variables('iotHubName'))]"
              ],
            "properties": {
                "sku": {
                    "name": "Standard"
                },
                "outputStartMode": "JobStartTime",
                "eventsOutOfOrderPolicy": "Adjust",
                "outputErrorPolicy": "Stop",
                "eventsOutOfOrderMaxDelayInSeconds": 0,
                "eventsLateArrivalMaxDelayInSeconds": 5,
                "inputs": [{
                    "name": "IoTinputStream",
                    "properties": {
                        "type": "Stream",
                        "datasource": {
                            "type": "Microsoft.Devices/IotHubs",
                            "properties": {
                                "iotHubNamespace": "[variables('iotHubName')]",
                                "sharedAccessPolicyName": "[variables('iotHubKeyName')]",
                                "sharedAccessPolicyKey": "[listkeys(variables('iotHubKeyResource'), variables('iotHubApiVersion')).primaryKey]",
                                "endpoint": "messages/events",
                                "consumerGroupName": "$Default"
                            }
                        },
                        "compression": {
                            "type": "None"
                        },
                        "partitionKey": "",
                        "serialization": {
                            "type": "Json",
                            "properties": {
                                "encoding": "UTF8"
                            }
                        }
                    }
                }],
                "transformation": {
                    "name": "Transformation",
                    "properties": {
                      "streamingUnits": 1,
                      "query": "SELECT\r\n    *\r\nINTO\r\n    [BlobOutput]\r\nFROM\r\n    [IoTinputStream]\r\n"
                    }
                  },
                "outputs":[{
                        "name": "BlobOutput",
                        "properties": {
                            "datasource": {
                                "type": "Microsoft.Storage/Blob",
                                "properties": {
                                    "blobPathPrefix": "",
                                    "storageAccounts": [
                                        {
                                            "accountKey": "[listkeys(variables('storageId'), variables('storageVersion')).keys[0].value]",
                                            "accountName": "[variables('storageAccountName')]"
                                        }
                                    ],
                                    "container": "iotstorage",
                                    "pathPattern": "",
                                    "dateFormat": "yyyy/MM/dd",
                                    "timeFormat": "HH",
                                    "authenticationMode": "ConnectionString"
                                }
                            },
                            "serialization": {
                                "type": "Json",
                                "properties": {
                                    "encoding": "UTF8",
                                    "format": "LineSeparated"
                                }
                            }
                        }
                    }
                ],
                "dataLocale": "en-US",
                "compatibilityLevel": "1.1"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(variables('storageAccountName'), '/default/iotstorage')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        }
    ]
}